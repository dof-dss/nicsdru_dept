<?php

/**
 * @file
 * Departmental User module for Departmental sites.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Url;

/**
 * Implements hook_user_logout().
 */
function dept_user_user_logout(AccountInterface $account) {
  // Remove all sessions for the user.
  // Fixes the issue of users remaining logged in on
  // multiple departmental sites.
  \Drupal::database()
    ->delete('sessions')
    ->condition('uid', $account->id())
    ->execute();
}

/**
 * Submission callback for user password form.
 */
function dept_user_user_password_reset_redirect_to_domain_homepage(&$form, FormStateInterface $form_state) {
  // OOTB Core will use a RedirectResponse to <front> which doesn't always work
  // consistently for domain enabled sites. We set the redirect to the absolute
  // URL for the active department to work around this.

  /** @var \Drupal\dept_core\DepartmentManager $dept_manager */
  $dept_manager = \Drupal::service('department.manager');
  /** @var \Drupal\dept_core\Entity\Department $current_dept */
  $current_dept = $dept_manager->getCurrentDepartment();

  $form_state->setRedirectUrl(Url::fromUri($current_dept->url(), ['absolute' => TRUE]));
}

/**
 * Implements hook_form_alter().
 */
function dept_user_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id === 'user_pass') {
    // Add extra callback to work around TrustedRedirectResponse issue on form submit.
    $form['#submit'][] = 'dept_user_user_password_reset_redirect_to_domain_homepage';
  }

  if ($form_id === 'user_login_form') {
    $form['pw_reset'] = [
      '#type' => 'html_tag',
      '#tag' => 'a',
      '#attributes' => [
        'href' => Url::fromRoute('user.pass')->toString(),
      ],
      '#value' => t('Forgotten your password?'),
    ];
  }
}
