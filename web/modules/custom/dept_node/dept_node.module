<?php

/**
 * @file
 * Departmental Node module for Departmental sites.
 */

use Drupal\dept_core\Department;
use Drupal\dept_node\Entity\Node;
use Drupal\dept_node\Form\NodeForm;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_entity_type_alter().
 */
function dept_node_entity_type_alter(&$entity_types) {
  if (isset($entity_types['node'])) {
    $entity_types['node']->setClass(Node::class);

    foreach (['default', 'edit'] as $operation) {
      $entity_types['node']->setFormClass($operation, NodeForm::class);
    }
  }
}

/**
 * Implements hook_form_ENTITY_form_alter().
 */
function dept_node_form_node_form_alter(&$form, $form_state) {

  // Process Domain module pathauto alias options.
  if (array_key_exists('domain_path', $form['path']['widget'][0])) {
    $dept_manager = \Drupal::service('department.manager');
    $dept = $dept_manager->getCurrentDepartment();

    if (array_key_exists('group_publish', $form)) {
      $form['group_publish']['#attached']['library'][] = 'dept_node/dept_node.domain_pathauto';
    }
    else {
      if (array_key_exists($dept->id(), $form['path']['widget'][0]['domain_path'])) {
        // Check the 'generate Domain URL' checkbox for the current domain.
        $form['path']['widget'][0]['domain_path'][$dept->id()]['pathauto']['#default_value'] = 1;
      }
    }
  }

}

/**
 * Implements hook_views_pre_render().
 */
function dept_node_views_pre_render(ViewExecutable $view) {
  // Append the active site name to a few fields/titles for publications RSS.
  if ($view->id() === 'press_releases') {
    $site_name = \Drupal::config('system.site')->get('name');
    $title = t('Latest press releases from ') . $site_name;
    $view->setTitle($title);

    if (\Drupal::routeMatch()->getRouteName() === 'entity.view.preview_form') {
      \Drupal::messenger()
        ->addWarning('NB: Title altered in dept_node_views_pre_render()');
    }
  }
}

/**
 * Implements hook_views_query_alter().
 *
 * This adds the active department group id value to the WHERE clause
 * where the group_content_field_data table has been both added as a
 * relationship in the view config and has been added as a boilerplate
 * filter condition to restrict o specific group.
 *
 * For topic entity queues, it alters the relationship condition to
 * restrict the query to the correct entity queue id, based on repurposing
 * the department name attribute as the numerical id would require a
 * separate fixed lookup condition or function.
 */
function dept_node_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  $dept_manager = \Drupal::service('department.manager');
  /** @var Drupal\dept_core\Department $dept */
  $dept = $dept_manager->getCurrentDepartment();

  foreach ($query->where as $i => &$clause) {
    foreach ($clause['conditions'] as $j => &$condition) {
      if ($condition['field'] != 'group_content_field_data_node_field_data.gid') {
        continue;
      }

      $condition['value'] = $dept->groupId();
    }
  }

  if ($view->id() === 'topic_queue') {
    $topic_queue_id = strtolower($dept->name()) . '_topics';
    // Replace any spaces for underscores.
    $topic_queue_id = str_replace(' ', '_', $topic_queue_id);

    $table = $query->getTableInfo('entity_subqueue__items');
    $table['join']->extra[0]['value'][0] = $topic_queue_id;
  }
}
