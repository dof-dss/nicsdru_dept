<?php

/**
 * @file
 * Departmental Node module for Departmental sites.
 */

use Drupal\dept_node\Entity\Node;
use Drupal\dept_node\Form\NodeForm;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_entity_type_alter().
 */
function dept_node_entity_type_alter(&$entity_types) {
  if (isset($entity_types['node'])) {
    $entity_types['node']->setClass(Node::class);

    foreach (['default', 'edit'] as $operation) {
      $entity_types['node']->setFormClass($operation, NodeForm::class);
    }
  }
}

/**
 * Implements hook_form_ENTITY_form_alter().
 */
function dept_node_form_node_form_alter(&$form, $form_state) {

  // Process Domain module pathauto alias options.
  if (array_key_exists('domain_path', $form['path']['widget'][0])) {
    $dept_manager = \Drupal::service('department.manager');
    $dept = $dept_manager->getCurrentDepartment();

    if (array_key_exists('group_publish', $form)) {
      $form['group_publish']['#attached']['library'][] = 'dept_node/dept_node.domain_pathauto';
    }
    else {
      if (array_key_exists($dept->id(), $form['path']['widget'][0]['domain_path'])) {
        // Check the 'generate Domain URL' checkbox for the current domain.
        $form['path']['widget'][0]['domain_path'][$dept->id()]['pathauto']['#default_value'] = 1;
      }
    }
  }

}

/**
 * Implements hook_views_pre_render().
 */
function dept_node_views_pre_render(ViewExecutable $view) {
  // Append the active site name to a few fields/titles for publications RSS.
  if ($view->id() === 'press_releases') {
    $site_name = \Drupal::config('system.site')->get('name');
    $title = t('Latest press releases from ') . $site_name;
    $view->setTitle($title);

    if (\Drupal::routeMatch()->getRouteName() === 'entity.view.preview_form') {
      \Drupal::messenger()
        ->addWarning('NB: Title alterered in dept_node_views_pre_render()');
    }
  }
}
