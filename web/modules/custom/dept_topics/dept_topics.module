<?php

/**
 * @file
 * Departmental topics/subtopics module for controlling display
 * of topics, subtopics and related content.
 */

use Drupal\Core\Link;
use Drupal\node\NodeInterface;
use Drupal\views\ViewExecutable;
use Drupal\views\Views;

/**
 * Implements hook_preprocess_node().
 */
function dept_topics_preprocess_node(array &$variables) {
  $node = &$variables['node'];
  $view_mode = $variables['view_mode'];

  if (!$node instanceof NodeInterface) {
    return;
  }

  if ($node->bundle() === 'topic' && $view_mode === 'full') {
    // For each topic, define a map of what subtopics appear.
    // Each subtopic block is then rendered in turn with the subtopic id and number of items
    // to show passed in as block/views display parameters.
    $subtopics_to_display = dept_topics_subtopics_queue_for_topic($node);

    if (!empty($subtopics_to_display)) {
      foreach ($subtopics_to_display as $subtopic_id => $label) {
        // Get subtopic content.
        $ids = \Drupal::entityQuery('node')
          ->condition('type', 'article')
          ->condition('status', 1)
          ->condition('field_site_topics', $node->id())
          ->condition('field_site_subtopics', $subtopic_id)
          ->sort('title', 'ASC')
          ->execute();

        $subtopic_nodes = \Drupal::entityTypeManager()
          ->getStorage('node')->loadMultiple($ids);

        $content_links = [];
        foreach ($subtopic_nodes as $content_node) {
          /** @var \Drupal\node\NodeInterface $content_node */
          $content_links[] = $content_node->toLink()->toRenderable();
        }

        // Add render array elements we can call from the node-topic--full template.
        $variables['subtopics_content']['subtopic_' . $subtopic_id] = [
          '#theme' => 'subtopic_content_list',
          '#title' => $subtopics_to_display[$subtopic_id],
          '#title_link' => Link::createFromRoute(
            $node->label(),
            'entity.node.canonical',
            ['node' => $node->id()],
          ),
          '#content_links' => $content_links,
          '#read_more_link' => Link::createFromRoute(
            t('Read more'),
            'entity.node.canonical',
            ['node' => $node->id()],
          ),
        ];
      }
    }
  }
}

/**
 * Implements hook_theme().
 */
function dept_topics_theme($existing, $type, $theme, $path) {
  return [
    'subtopic_content_list' => [
      'variables' => [
        'title' => NULL,
        'title_link' => NULL,
        'content_links' => NULL,
        'read_more_link' => NULL,
      ],
    ],
  ];
}

/**
 * Function to return a list of keyed subtopic node ids/labels
 * that reference a specified topic node.
 *
 * @param \Drupal\node\NodeInterface $node
 *   The topic node.
 *
 * @return array
 *   Array of subtopic id/label values, e.g.: [1 => 'Angling'].
 */
function dept_topics_subtopics_queue_for_topic(NodeInterface $node) {
  $queue = [];

  if ($node->bundle() === 'topic') {
    // Find all subtopics that reference this topic.
    $ids = \Drupal::entityQuery('node')
      ->condition('type', 'subtopic')
      ->condition('status', 1)
      ->condition('field_parent_topic', $node->id())
      ->execute();

    $subtopic_nodes = \Drupal::entityTypeManager()
      ->getStorage('node')->loadMultiple($ids);

    foreach ($subtopic_nodes as $node) {
      $queue[$node->id()] = $node->label();
    }
  }

  return $queue;
}
