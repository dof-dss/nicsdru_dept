<?php

/**
 * @file
 * Departmental topics/subtopics module for controlling display
 * of topics, subtopics and related content.
 */

use Drupal\Core\Link;
use Drupal\dept_core\Department;
use Drupal\node\NodeInterface;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;
use Drupal\views\Views;

/**
 * Implements hook_preprocess_node().
 */
function dept_topics_preprocess_node(array &$variables) {
  $node = &$variables['node'];
  $view_mode = $variables['view_mode'];

  if (!$node instanceof NodeInterface) {
    return;
  }

  if ($node->bundle() === 'topic' && $view_mode === 'full') {

    $subtopics_to_display = \Drupal::service('dept_topics.topics')
      ->getSubtopicsForTopic($node);

    if (!empty($subtopics_to_display)) {
      foreach ($subtopics_to_display as $subtopic_id => $subtopic_title) {
        // Service to pull in subtopic content instead of the fixed code here.
        $content_links = \Drupal::service('dept_topics.subtopics')
          ->getSubtopicContent($subtopic_id);

        // Prefix all included content with 'node:' to form suitable cache tags.
        $cache_tags = preg_filter('/^/', 'node:', array_keys($content_links));
        // Add the content stack view tag so that when draggableviews expires
        // the view tags relating to any changes, that we regenerate any
        // html relating to this render element as required.
        $cache_tags[] = 'config:views.view.content_stacks';

        // Add render array elements we can call from the node-topic--full template.
        $variables['content']['subtopics_list'][] = [
          '#theme' => 'subtopic_content_list',
          '#title' => $subtopic_title,
          '#title_link' => Link::createFromRoute(
            $subtopic_title,
            'entity.node.canonical',
            ['node' => $subtopic_id],
          ),
          '#content_links' => $content_links,
          '#read_more_link' => Link::createFromRoute(
            t('Read more'),
            'entity.node.canonical',
            ['node' => $subtopic_id],
          ),
          '#cache' => [
            'keys' => ['subtopic_' . $subtopic_id],
            'tags' => $cache_tags,
          ]
        ];
      }
    }
  }

  if ($node->bundle() === 'subtopic' && $view_mode === 'full') {
    $subtopics_content = \Drupal::service('dept_topics.subtopics')
      ->getSubtopicContent($node->id());

    $variables['content'][] = [
      '#theme' => 'item_list',
      '#list_type' => 'ul',
      '#items' => $subtopics_content,
    ];
  }
}

/**
 * Implements hook_theme().
 */
function dept_topics_theme($existing, $type, $theme, $path) {
  return [
    'subtopic_content_list' => [
      'variables' => [
        'title' => NULL,
        'title_link' => NULL,
        'content_links' => NULL,
        'read_more_link' => NULL,
      ],
    ],
  ];
}
