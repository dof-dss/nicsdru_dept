<?php

use Drupal\Core\Entity\ContentEntityType;
use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
 * Create the Orphaned entity type as the module is already installed.
 */
function dept_topics_update_8001() {
  $definition_update_manager = Drupal::entityDefinitionUpdateManager();

  $entity_definition = new ContentEntityType([
    "id" => "topics_orphaned_content",
    "label" => new TranslatableMarkup("Orphaned topic content"),
    "handlers" => [
      "view_builder" => "Drupal\Core\Entity\EntityViewBuilder",
      "views_data" => "Drupal\views\EntityViewsData",
      "route_provider" => [
        "html" => "Drupal\dept_topics\Routing\OrphanedTopicContentHtmlRouteProvider",
      ],
    ],
    "base_table" => "topics_orphaned_content",
    "translatable" => FALSE,
    "admin_permission" => "administer orphaned content",
    "entity_keys" => [
      "id" => "id",
      "label" => "label",
      "uuid" => "uuid",
      "owner" => "uid",
    ],
    "links" => [
      "canonical" => "/admin/orphaned-content/{topics_orphaned_content}",
    ],
  ]);

  $entity_definition->setClass('Drupal\dept_topics\Entity\OrphanedTopicContent');
  $definition_update_manager->installEntityType($entity_definition);
}
/**
 * Fix subtopic site_topics field to match the parent topic.
 */
function dept_topics_update_8002() {
    $db = \Drupal::database();
    $nm = \Drupal::entityTypeManager()->getStorage('node');

    $topics = $nm->loadByProperties(['type' => 'subtopic']);

    foreach ($topics as $topic) {
      $children_ids = array_column($topic->get('field_topic_content')->getValue(), 'target_id');
      $children = $nm->loadMultiple($children_ids);

      // Iterate each topic child checking if it has a site_topic value matching
      // this topic and if it doesn't, update it.
      foreach ($children as $child) {
        if ($child->bundle() === 'subtopic') {
          $site_topic_ids = array_column($child->get('field_site_topics')->getValue(), 'target_id');
          if (!in_array($topic->id(), $site_topic_ids)) {
            if (count($site_topic_ids) === 1) {

              // Update current revision.
              $db->update('node__field_site_topics')
                ->fields(['field_site_topics_target_id' => $topic->id()])
                ->condition('entity_id', $child->id())
                ->execute();

              // Update all revisions.
              $db->update('node_revision__field_site_topics')
                ->fields(['field_site_topics_target_id' => $topic->id()])
                ->condition('entity_id', $child->id())
                ->execute();
            }
          }
        }
      }
    }
}
