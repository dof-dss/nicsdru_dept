<?php

/**
 * @file
 * Search related overrides and preprocessing.
 */

use Drupal\block\Entity\Block;
use Drupal\dept_core\Entity\Department;
use Drupal\facets\FacetInterface;
use Drupal\views\ViewExecutable;
use Drupal\facets_summary\Entity\FacetsSummary;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dept_search_form_search_api_form_alter(&$form) {
  $form['query']['#attributes']['placeholder'] = t('Search this site...');
}

/**
 * Implements hook_preprocess_facets_summary_item_list().
 */
function dept_search_preprocess_facets_summary_item_list(&$variables) {
  /* @var \Drupal\facets_summary\Entity\FacetsSummary $summary_facet */
  $summary_facet = \Drupal::entityTypeManager()->getStorage('facets_summary')->load($variables['facet_summary_id']);

  // Add the facet summary label as a facet description to allow us to
  // display that instead of the default facet (machine) name.
  if ($summary_facet instanceof FacetsSummary) {
    $facets = $summary_facet->getFacets();
    foreach ($variables['items'] as $index => $item) {
      $label = $facets[$item['#title']['#facet']->id()]['label'];
      $variables['items'][$index]['#title']['#facet']->set('description', $label);
    }
  }
}

/**
 * Implements hook_preprocess_facets_item_list().
 */
function dept_search_preprocess_facets_item_list(array &$variables) {
  /** @var \Drupal\facets\FacetInterface $facet */
  $facet = $variables['facet'];

  // Remove NIGov from press releases department facet.
  if ($facet->id() === 'pr_department' && !empty($variables['items'])) {
    foreach ($variables['items'] as $index => $item) {
      if ($item['#title']['#value'] === 'NIGov') {
        unset($variables['items'][$index]);
      }
    }

  }
}

/**
 * Facet sorting callback, see dept_search_preprocess_facets_item_list().
 */
function dept_search_sort_group_facet_by_title($a, $b) {
  $a_title = $a['#title']['#value'] ?? '';
  $b_title = $b['#title']['#value'] ?? '';

  // Case-insensitive string comparison.
  return strcasecmp($a_title, $b_title);
}

/**
 * Implements hook_views_pre_view().
 */
function dept_search_views_pre_view(ViewExecutable $view, $display_id, array &$args) {

  $dept_manager = in_array($view->id(), [
    'news_search',
    'news_search',
    'publications_search'
  ]) ? \Drupal::service('department.manager') : NULL;

  if ($view->id() === 'news_search' && $display_id === 'news_search') {
    /** @var Drupal\dept_core\Entity\Department $active_dept */
    $active_dept = $dept_manager->getCurrentDepartment();
    if (!$active_dept instanceof Department) {
      return;
    }

    // Don't pass in a value for NIGOV and let views show its 404 handler.
    // That site should use /press-releases to show its content.
    if ($active_dept->id() !== 'nigov') {
      $args[0] = $active_dept->id();
    }
  }

  if ($view->id() === 'publications_search' && $display_id === 'publications_search') {
    /** @var Drupal\dept_core\Entity\Department $active_dept */
    $active_dept = $dept_manager->getCurrentDepartment();
    if (!$active_dept instanceof Department) {
      return;
    }

    // Sites other than NIGOV should return a 404. We simply don't pass in
    // an argument if it's not NIGOV and rely on views to return a 404 response
    // as intercepting/adjusting this in an event subscriber is extremely awkward.
    if ($active_dept->id() === 'nigov') {
      // Add all group ids as + separated entries to the view's contextual arg.
      $dept_ids = [];
      foreach ($dept_manager->getAllDepartments() as $dept) {
        $dept_ids[] = $dept->id();
      }
      $args[0] = implode('+', $dept_ids);
    }
    else {
      $args[0] = $active_dept->id();
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function dept_search_form_alter(&$form, &$form_state, &$form_id) {
  // Don't display the sort/order by options on view exposed
  // search forms.
  switch ($form['#id']) {
    case 'views-exposed-form-consultations-search-consultations-search':
    case 'views-exposed-form-news-search-news-search':
    case 'views-exposed-form-news-search-press-release-search':
    case 'views-exposed-form-publications-search-publications-search':
      $form['sort_by']['#type'] = 'hidden';
      $form['sort_order']['#type'] = 'hidden';
      break;
  }
}

/**
 * Implements hook_views_data_alter().
 */
function dept_search_views_data_alter(array &$data) {
  $data['views']['search_sort_by'] = [
    'title' => t('Search sort links'),
    'help' => t('Provides links to sort search results by publication date and by relevance.'),
    'area' => [
      'id' => 'search_sort_by',
    ],
  ];
  return $data;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dept_search_form_block_admin_display_form_alter(&$form) {
  foreach ($form['blocks'] as $block_id => $block_info) {
    if (preg_match('/^#/', $block_id)) {
      // It's a render attribute so skip it.
      continue;
    }

    $type = $block_info['type']['#markup'] ?? '';

    if (preg_match('/facets/i', $type)) {
      /** @var \Drupal\block\BlockInterface $block */
      $block = Block::load($block_id);
      $settings = $block->get('settings');

      if (empty($settings)) {
        return;
      }

      $facet_id = str_replace('facet_block:', '', $settings['id']);
      /** @var \Drupal\facets\Entity\Facet $facet */
      $facet = \Drupal::entityTypeManager()->getStorage('facets_facet')->load($facet_id);

      if ($facet instanceof FacetInterface) {
        /** @var \Drupal\facets\Plugin\facets\facet_source\SearchApiDisplay $source */
        $source = $facet->getFacetSource();

        $view_title = $source->getViewsDisplay()->getTitle();
        // It's a facet block so we can adjust the title string.
        $form['blocks'][$block_id]['info']['#plain_text'] .= ' (facet view: ' . $view_title . ')';
      }
    }
  }
}
