<?php

/**
 * @file
 * Search related overrides and preprocessing.
 */

use Drupal\dept_core\Department;
use Drupal\facets\FacetInterface;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dept_search_form_search_api_form_alter(&$form) {
  $form['query']['#attributes']['placeholder'] = t('Search this site...');
}

/**
 * Implements hook_preprocess_facets_result_item__summary().
 */
function dept_search_preprocess_facets_result_item__summary(&$variables) {
  /** @var \Drupal\facets\FacetInterface $facet */
  $facet = $variables['facet'];

  if ($facet->id() === 'group') {
    /* @var \Drupal\dept_core\DepartmentManager $dept_manager */
    $dept_manager = \Drupal::service('department.manager');
    $facet_value = $variables['raw_value'];

    foreach ($dept_manager->getAllDepartments() as $dept) {
      /* @var \Drupal\dept_core\Department $dept */
      if ($dept->groupId() === $facet_value) {
        $variables['value'] = $dept->name();
        return;
      }
    }
  }
}

/**
 * Implements hook_preprocess_facets_summary_item_list().
 */
function dept_search_preprocess_facets_summary_item_list(&$variables) {

  $summary_facet = \Drupal::entityTypeManager()->getStorage('facets_summary')->load($variables['facet_summary_id']);

  // Add the facet summary label as a facet description to allow us to
  // display that instead of the default facet (machine) name.
  if (!empty($summary_facet)) {
    $facets = $summary_facet->getFacets();
    foreach ($variables['items'] as $index => $item) {
      $label = $facets[$item['#title']['#facet']->id()]['label'];
      $variables['items'][$index]['#title']['#facet']->set('description', $label);
    }
  }
}

/**
 * Implements hook_preprocess_facets_item_list().
 */
function dept_search_preprocess_facets_item_list(array &$variables) {

  /** @var \Drupal\facets\FacetInterface $facet */
  $facet = $variables['facet'];

  if ($facet->id() === 'group' && !empty($variables['items'])) {
    $depts = \Drupal::service('department.manager')->getAllDepartments();
    foreach ($variables['items'] as &$link) {
      $facet_group_id = $link['#title']['#raw_value'];
      foreach ($depts as $dept) {
        /** @var \Drupal\dept_core\Department $dept */
        if ($dept->groupId() === $facet_group_id) {
          // Replace the group id value with the dept name.
          $link['#title']['#value'] = $dept->name();
        }
      }
    }

    // Slightly complex custom facet sort as the label is preprocessed above.
    // NB: Facet config has display value sorting taken away to avoid double
    // sorting the values as it comes through the render pipeline.
    usort($variables['items'], 'dept_search_sort_group_facet_by_title');
  }

  // Remove NIGov from press releases department facet.
  if ($facet->id() === 'pr_department' && !empty($variables['items'])) {
    foreach ($variables['items'] as $index => $item) {
      if ($item['#title']['#value'] === 'NIGov') {
        unset($variables['items'][$index]);
      }
    }

  }
}

/**
 * Facet sorting callback, see dept_search_preprocess_facets_item_list().
 */
function dept_search_sort_group_facet_by_title($a, $b) {
  $a_title = $a['#title']['#value'] ?? '';
  $b_title = $b['#title']['#value'] ?? '';

  // Case insensitive string comparison.
  return strcasecmp($a_title, $b_title);
}

/**
 * Implements hook_views_pre_view().
 */
function dept_search_views_pre_view(ViewExecutable $view, $display_id, array &$args) {
  if ($view->id() === 'news_search' && $display_id === 'news_search') {
    /** @var \Drupal\dept_core\Department $active_dept */
    $active_dept = \Drupal::service('department.manager')->getCurrentDepartment();
    if (!$active_dept instanceof Department) {
      return;
    }

    // Don't pass in a value for NIGOV and let views show its 404 handler.
    // That site should use /press-releases to show its content.
    if ($active_dept->id() != 'group_1') {
      $args[0] = str_replace('group_', '', $active_dept->id());
    }
  }

  if ($view->id() === 'publications_search' && $display_id === 'publications_search') {
    /** @var \Drupal\dept_core\Department $active_dept */
    $active_dept = \Drupal::service('department.manager')->getCurrentDepartment();
    if (!$active_dept instanceof Department) {
      return;
    }

    // Sites other than NIGOV should return a 404. We simply don't pass in
    // an argument if it's not NIGOV and rely on views to return a 404 response
    // as intercepting/adjusting this in an event subscriber is extremely awkward.
    if ($active_dept->id() === 'group_1') {
      // Add all group ids as + separated entries to the view's contextual arg.
      $dept_ids = [];
      $depts = \Drupal::service('department.manager')->getAllDepartments();
      foreach ($depts as $dept) {
        $dept_ids[] = $dept->groupId();
      }
      $args[0] = implode('+', $dept_ids);
    }
    else {
      $args[0] = str_replace('group_', '', $active_dept->id());
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function dept_search_form_alter(&$form, &$form_state, &$form_id) {
  // Don't display the sort/order by options on view exposed
  // search forms.
  switch ($form['#id']) {
    case 'views-exposed-form-consultations-search-consultations-search':
    case 'views-exposed-form-news-search-news-search':
    case 'views-exposed-form-news-search-press-release-search':
    case 'views-exposed-form-publications-search-publications-search':
      $form['sort_by']['#type'] = 'hidden';
      $form['sort_order']['#type'] = 'hidden';
      break;
  }
}

/**
 * Implements hook_views_data_alter().
 */
function dept_search_views_data_alter(array &$data) {
  $data['views']['search_sort_by'] = [
    'title' => t('Search sort links'),
    'help' => t('Provides links to sort search results by publication date and by relevance.'),
    'area' => [
      'id' => 'search_sort_by',
    ],
  ];
  return $data;
}
