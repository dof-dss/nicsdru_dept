/* =====================================================
 * Styling unique to CKEditor
 * =====================================================*/

@import '../init';

body {
  font-family: $base-font-family;
}

.cke_editable {

  // applied to body in ckeditor
  max-width: $article-max-width;
  margin: 18px;

  // Create a semi-transparent out-of-bounds area.
  &::before {
    content: '';
    display: block;
    box-sizing: content-box;
    width: 120px;
    height: 100%;
    padding: 15px 100% 15px 15px;
    text-align: center;
    position: fixed;
    top: 0;
    left: $article-max-width + 36px;
    z-index: 1;
    background-color: rgba(#000, .5);
    background-clip: padding-box;
    border-left: 18px solid rgba(255, 255, 255, .5);
    font-size: 14px;
    font-weight: normal;
    line-height: 1.5;
    color: #eee;
  }

  // Create message vertically centered in out-of-bounds area.
  &::after {
    content: 'Content must not cross the margin into this area.';
    display: flex;
    justify-content: center;
    align-items: center;
    box-sizing: content-box;
    width: 120px;
    height: 100%;
    padding: 0 100% 0 15px;
    text-align: center;
    position: fixed;
    top: 0;
    left: $article-max-width + 54px;
    z-index: 2;
    font-size: 14px;
    font-weight: normal;
    line-height: 1.5;
    color: #fff;
  }

  // Make sure ckeditor magicline does not cross into out-of-bounds.
  span[data-cke-magic-line] {
    max-width: $article-max-width + 36px;
  }
}

.cke_show_borders > table.cke_show_border,
.cke_show_borders > table.cke_show_border > tr > td,
.cke_show_borders > table.cke_show_border > tr > th,
.cke_show_borders > table.cke_show_border > tbody > tr > td,
.cke_show_borders > table.cke_show_border > tbody > tr > th,
.cke_show_borders > table.cke_show_border > thead > tr > td,
.cke_show_borders > table.cke_show_border > thead > tr > th,
.cke_show_borders > table.cke_show_border > tfoot > tr > td,
.cke_show_borders > table.cke_show_border > tfoot > tr > th {
  border: 1px solid $table-border-color !important; // Overrides inline style sheet ckeditor adds.
}

.media-image,
.media-video,
.media-audio {
  display: block;
  position: relative;

  // Styling for the Edit media button
  .media-library-item__edit {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 1000;
    margin: 0;
    min-height: 30px;
    border: 0;
    border-radius: 0;
    -webkit-appearance: none;
    cursor: pointer;
    background-color: $btn-primary;
    color: #fff;
    font-size: 14px;
  }
}

.split-list {
  columns: 2;
  column-gap: 3.6rem;
}

address {
  @include responsive-typo-map($normal-text);
  margin: 1em 0 1.5em;
  font-weight: normal;
  font-style: normal;
  color: $charcoal;

  &:not(.vcard) {
    padding: .5em 1em;
    border-left: .3334em solid $grey-light;
  }

  & > *:first-child {
    margin-top: 0;
  }
}

/*
Add box-shadow to blockquote.
*/
blockquote {
  border: 0;
  box-shadow: 0 -1.5px 0 0 #e8e7e7, 0 1.5px 0 0 #e8e7e7;
  padding: .5em 1.5em;
  margin: 2em 0;

  /*
  If first in chain, only top box-shadow
   */
  &:has(+ blockquote) {
    padding: .5em 1.5em 0;
    margin: 2em 0 0;
    box-shadow: 0 -1.5px 0 0 #e8e7e7;
  }

  /*
  Remove box-shadow from subsequent blockquotes in a chain.
  */
  & + blockquote {
    box-shadow: none;
    padding: 0 1.5em;
    margin: 0;

    /*
    Add bottom box-shadow to blockquote if it
    is the last one or it is not followed by
    another blockquote and it is not the first in the chain.
    */
    &:not(:first-of-type) {
      &:last-of-type,
      &:has(+ *:not(blockquote)) {
        box-shadow: 0 1.5px 0 0 #e8e7e7;
        padding: 0 1.5em .5em;
        margin-bottom: 2em;
      }
    }
  }

  cite {
    display: block;
    font-style: italic;
    text-align: right;
  }
}

ol {
  list-style-type: decimal;

  ol {
    list-style: upper-alpha;

    ol {
      list-style: lower-roman;

      ol {
        list-style: lower-alpha;
      }
    }
  }
}
