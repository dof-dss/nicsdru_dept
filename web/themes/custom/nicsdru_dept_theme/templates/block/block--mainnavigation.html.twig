{#
/**
 * @file
 * Theme override for a menu block.
 *
 * Available variables:
 * - plugin_id: The ID of the block implementation.
 * - label: The configured label of the block if visible.
 * - configuration: A list of the block's configuration values.
 *   - label: The configured label for the block.
 *   - label_display: The display settings for the label.
 *   - provider: The module or other provider that provided this block plugin.
 *   - Block plugin specific settings will also be stored here.
 * - content: The content of this block.
 * - attributes: HTML attributes for the containing element.
 *   - id: A valid HTML ID and guaranteed unique.
 * - title_attributes: HTML attributes for the title element.
 * - content_attributes: HTML attributes for the content element.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - social_links: Fetched from the theme settings; list of link elements
 *   to provide links to social networks for the site.
 *
 * Headings should be used on navigation menus that consistently appear on
 * multiple pages. When this menu block's label is configured to not be
 * displayed, it is automatically made invisible using the 'visually-hidden' CSS
 * class, which still keeps it visible for screen-readers and assistive
 * technology. Headings allow screen-reader and keyboard only users to navigate
 * to or skip the links.
 * See http://juicystudio.com/article/screen-readers-display-none.php and
 * http://www.w3.org/TR/WCAG-TECHS/H42.html for more information.
 */
#}
{% set heading_id = attributes.id ~ '-heading'|clean_id %}
<nav class="header__nav main-menu clearfix" aria-labelledby="{{ heading_id }}"{{ attributes|without('role') }}>
  {# Label. If not displayed, we still provide it for screen readers. #}
  {%- if not configuration.label_display -%}
    {%- set title_attributes = title_attributes.addClass('visually-hidden') -%}
  {%- endif -%}
  {{ title_prefix -}}
  <h2{{ title_attributes.setAttribute('id', heading_id) }}>{{ configuration.label }}</h2>
  {{- title_suffix }}
  {# Hamburger button.

  JS is used to make the button active (by removing the hidden attribute) and control
  various aria attributes that make the button accessible. The hidden attribute and aria
  attributes can be targetted in CSS to control the display of the nav menu.

  @see src/js/main-menu-toggle.js
  @see src/scss/3_components/navigation/main-menu.scss
  #}
  <button class="hamburger" id="nav-main-toggle" aria-controls="nav-main-menu" aria-expanded="false" aria-label="Open menu" hidden>
    <span></span>
  </button>
  {# Wrapping div required to allow us to set a max-width on child elements while retaining
     the background colour full-width on the parent element. #}
  <div class="nav-main" id="nav-main-menu">
  {# Menu. #}
  {%- block content -%}
    {{- content -}}
  {% endblock %}

  {# Social links. #}
  {% if social_links %}
    <ul class="nav-social list--no-bullet">
      {% for link in social_links %}
        <li>{{ link }}</li>
      {% endfor %}
    </ul>
  {% endif %}
  </div>
</nav>
