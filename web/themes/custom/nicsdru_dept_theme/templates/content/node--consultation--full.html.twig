{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
<article{{ attributes.addClass('ga-main').setAttribute('id', 'main-article').removeAttribute('role') }}>

  {% if banner_image %}
    {{ banner_image }}
  {% endif %}

  {% if show_title -%}
    <h1{{ title_attributes.addClass('page-title') }}>
      {% if consultation_in_progress or consultation_pending %}
        <span class="page-title__prefix">Open consultation</span>
      {% else %}
        <span class="page-title__prefix">Closed consultation</span>
      {% endif %}
      {{ label }}
      {%- if title_subtitle %}
        <span class="page-title__suffix subtitle">{{ title_subtitle }}</span>
      {%- endif -%}
    </h1>
  {% endif %}

  {{ content.field_published_date }}

  {% if show_topics and topics_subtopics_list is not empty -%}
    {{ topics_subtopics_list }}
  {% endif %}

  <div{{ content_attributes.addClass('content') }}>
    <div class="consultation-dates">
      {% if consultation_in_progress %}
        <p>
          <strong class="label">{{ 'Consultation closes'|t }}</strong>
          {{ consultation_end_date | date("j F Y \\a\\t g.i a") }}
        </p>
      {% elseif consultation_pending %}
        <p>
          <strong class="label">{{ 'Consultation opens'|t }}</strong>
          {{ consultation_start_date | date("j F Y \\a\\t g.i a") }}
        </p>
      {% else %}
        <p>
          <strong class="label">{{ 'Consultation closed'|t }}</strong>
          {{ 'Consultation opened'|t }} {{ consultation_start_date | date("j F Y") }}
          {{ 'and closed'|t }} {{ consultation_end_state | date("j F Y \\a\\t g.i a") }}
        </p>
      {% endif %}
    </div>

    <h2>{{ content.field_summary['#title'] }}</h2>
    {{ content.field_summary }}

    {{ content.field_attachment }}

    <h2>{{ 'Consultation description'|t }}</h2>
    {{ content.body }}

    {% if consultation_in_progress %}
      {{ content.group_ways_to_respond }}
    {% elseif consultation_pending %}
      <h2>Ways to respond</h2>
      <p class="info-notice">
        {{ 'Consultation pending — details on ways to respond will be provided when the consultation has opened.'|t }}
      </p>
    {% else %}
      <h2>Ways to respond</h2>
      <p class="info-notice">
        {{ 'Consultation closed — responses are no longer being accepted.'|t }}
      </p>
    {% endif %}
  </div>
  {% if display_social_links %}
    {{ drupal_entity('block', 'originssocialsharing', check_access=false) }}
  {% endif %}
</article>
