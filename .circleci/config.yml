version: 2.1

workflows:
  version: 2
  build-test:
    jobs:
      - build
      - coding_standards:
          requires:
            - build
      - deprecated_code:
          requires:
            - build

jobs:
  # Tests the integrity of the build, stores the results in a workspace for re-use in later jobs.
  build:
    docker:
      - image: circleci/php:7.4.15-apache-browsers
    environment:
      PLATFORM_REGION: "uk-1.platform.sh"
    steps:
      - hosts_keyscan
      - checkout_code
      - install_php_os_extensions
      - composer_tasks
      - persist_to_workspace:
          root: ./
          paths:
            - ./
  # Test for coding standards - will inherit the workspace/filesystem changes from build step, above.
  coding_standards:
    docker:
      - image: circleci/php:7.4.15-apache-browsers
    environment:
      PROJECT_ROOT: "/home/circleci/project"
      PLATFORM_REGION: "uk-1.platform.sh"
    steps:
      - attach_workspace:
          at: ./
      - run: sudo cp /home/circleci/project/.circleci/docker-php-circleci.ini /usr/local/etc/php/conf.d/
      - run:
          name: PHPCS analysis
          command: |
            CHECK_DIRS="${PROJECT_ROOT}/web/modules/custom"
            CHECK_DIRS="${CHECK_DIRS} ${PROJECT_ROOT}/web/modules/origins"
            CHECK_DIRS="${CHECK_DIRS} ${PROJECT_ROOT}/web/themes/custom"
            ~/project/phpcs.sh ${PROJECT_ROOT} $CHECK_DIRS

  deprecated_code:
    docker:
      - image: circleci/php:7.4.15-apache-browsers
    environment:
      PROJECT_ROOT: "/home/circleci/project"
    steps:
      - attach_workspace:
          at: ./
      - run: sudo cp /home/circleci/project/.circleci/docker-php-circleci.ini /usr/local/etc/php/conf.d/
      - run:
          name: Deprecated code check
          command: |
            cd $PROJECT_ROOT
            CHECK_DIRS="${PROJECT_ROOT}/web/modules/custom"
            CHECK_DIRS="$CHECK_DIRS ${PROJECT_ROOT}/web/modules/origins"
            CHECK_DIRS="$CHECK_DIRS ${PROJECT_ROOT}/web/themes/custom"
            vendor/bin/drupal-check $CHECK_DIRS
# Re-usable commands.
commands:
  checkout_code:
    description: "Handle composer access tokens, SSH key fingerprints and code checkout"
    steps:
      - run:
          name: Add GitHub access token for composer
          command: echo 'composer config -g github-oauth.github.com $GITHUB_TOKEN' >> $BASH_ENV
      # Add SSH user key so we can access related repositories as part of our initial clone + composer install command.
      # f8:f0 >> private fingerprint to allow Circle CI to talk to platform.sh.
      # 89:cc >> GitHub user key fingerprint.
      - add_ssh_keys:
          fingerprints:
            - "f8:f0:34:a1:0e:51:56:44:2b:9c:db:b7:2f:26:3b:48"
            - "89:cc:6e:61:6a:0e:13:ab:47:0b:25:d6:bc:90:d4:d2"
      - checkout
  composer_tasks:
    description: "Validate and install dependencies using composer"
    steps:
      - run:
          name: Validate composer.json and composer.lock file for consistency
          command: composer validate --no-check-all --strict
      - restore_cache:
          keys:
            - composer-{{ checksum "composer.lock" }}
      - run:
          name: Fetch dependencies with composer
          command: |
            composer install --no-interaction --optimize-autoloader
      - save_cache:
          key: composer-{{ checksum "composer.lock" }}
          paths:
            - $HOME/.composer/cache
  composer_tasks__no_cache:
    description: "Validate and install dependencies using composer"
    steps:
      - run:
          name: Validate composer.json and composer.lock file for consistency
          command: composer validate --no-check-all --strict
      - run:
          name: Fetch dependencies with composer
          command: |
            composer install --no-interaction --optimize-autoloader
  composer_tasks__edge_packages:
    description: "Switch dof-dss packages to HEAD on development branch"
    steps:
      - run:
          name: Switch dof-dss packages to HEAD on develelopment branch
          command: |
            composer require dof-dss/nicsdru_origins_theme:dev-development dof-dss/nicsdru_origins_modules:dev-development
  install_php_os_extensions:
    description: "Install a standard group of extensions and packages"
    steps:
      - run:
          name: Add OS and PHP extensions
          command: |
            sudo cp /home/circleci/project/.circleci/docker-php-circleci.ini /usr/local/etc/php/conf.d/
            sudo apt --allow-releaseinfo-change update
            sudo apt install -y libpng-dev
            sudo docker-php-ext-install gd pcntl posix
  hosts_keyscan:
    description: "Keyscan for hosts that require SSH access"
    steps:
      - run:
          name: Keyscan for hosts that require SSH access
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan -H github.com >> ~/.ssh/known_hosts
            ssh-keyscan -H ssh.$PLATFORM_REGION >> ~/.ssh/known_hosts
  install_psh_cli:
    description: "Install the Platform.sh CLI tool"
    steps:
      - run:
          name: Install the Platform.sh CLI tool
          command: curl -sS https://platform.sh/cli/installer | php
      - run:
          name: Add platform cli tool to $PATH
          command: echo 'export PATH="$HOME/"'.platformsh/bin':"$PATH"' >> $BASH_ENV
